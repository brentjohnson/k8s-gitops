---
apiVersion: helm.fluxcd.io/v1
kind: HelmRelease
metadata:
  name: prometheus-operator
  namespace: observability
  annotations:
    fluxcd.io/ignore: 'false'
    fluxcd.io/automated: 'false'
spec:
  releaseName: prometheus-operator
  helmVersion: v3
  rollback:
    enable: true
  chart:
    repository: https://kubernetes-charts.storage.googleapis.com/
    name: prometheus-operator
    version: 9.1.0
  values:
    fullnameOverride: 'z'
    prometheusOperator:
      enabled: true
      manageCrds: true
      createCustomResource: true
      image:
        repository: quay.io/coreos/prometheus-operator
        tag: v0.40.0
        pullPolicy: Always
      tlsProxy:
        image:
          repository: raspbernetes/ghostunnel
          tag: v1.5.2
      admissionWebhooks:
        patch:
          image:
            repository: jettech/kube-webhook-certgen
            tag: v1.2.0
      configmapReloadImage:
        repository: jimmidyson/configmap-reload
        tag: v0.3.0
      prometheusConfigReloaderImage:
        repository: quay.io/coreos/prometheus-config-reloader
        tag: v0.40.0
    alertmanager:
      enabled: true
    grafana:
      enabled: true
      ingress:
        enabled: true
        annotations:
          kubernetes.io/ingress.class: nginx
          cert-manager.io/cluster-issuer: 'letsencrypt-staging'
          nginx.ingress.kubernetes.io/auth-url: 'https://raspbernetes.com/oauth2/auth'
          nginx.ingress.kubernetes.io/auth-signin: 'https://raspbernetes.com/oauth2/start?rd=$escaped_request_uri'
        hosts:
          - grafana.raspbernetes.com
        path: /
        tls:
          - secretName: grafana.raspbernetes.com-tls
            hosts:
              - grafana.raspbernetes.com
      sidecar:
        image:
          repository: raspbernetes/k8s-sidecar
          tag: 0.1.144
        imagePullPolicy: Always
      plugins:
        - natel-discrete-panel
        - pr0ps-trackmap-panel
        - grafana-piechart-panel
        - vonage-status-panel
        - grafana-worldmap-panel
        - btplc-status-dot-panel
      dashboardProviders:
        dashboardproviders.yaml:
          apiVersion: 1
          providers:
            - name: 'default'
              orgId: 1
              folder: ''
              type: file
              disableDeletion: false
              editable: true
              options:
                path: /var/lib/grafana/dashboards/default
      dashboards:
        default:
          nginx-dashboard:
            url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/grafana/dashboards/nginx.json
            datasource: Prometheus
          velero:
            url: https://grafana.com/api/dashboards/11055/revisions/2/download
            datasource: Prometheus
          flux:
            url: https://grafana.com/api/dashboards/10475/revisions/1/download
            datasource: Prometheus
          openebs-01:
            url: https://grafana.com/api/dashboards/12171/revisions/1/download
            datasource: Prometheus
          openebs-02:
            url: https://raw.githubusercontent.com/openebs/openebs/master/k8s/openebs-pg-dashboard.json
            datasource: Prometheus
      additionalDataSources:
        - name: loki
          type: loki
          access: proxy
          url: http://loki.logging.svc.cluster.local:3100
      downloadDashboardsImage:
        repository: curlimages/curl
        tag: 7.70.0
      ## grafana Authentication can be enabled with the following values on grafana.ini
      # The full public facing url you use in browser, used for redirects and emails
      # https://grafana.com/docs/grafana/latest/auth/github/#enable-github-in-grafana
      # Note: auth.github.enabled=false until chart supports existingSecret functionality.
      # https://github.com/helm/charts/issues/22175
      # grafana.ini:
      #   auth.github:
      #     enabled: true
      #     allow_sign_up: false
      #     scopes: user:email,read:org
      #     auth_url: https://github.com/login/oauth/authorize
      #     token_url: https://github.com/login/oauth/access_token
      #     api_url: https://github.com/user
      #     allowed_organizations: raspbernetes
      #     client_id:
      #     client_secret:
      #   server:
      #     root_url: https://grafana.raspbernetes.com
    prometheus:
      ingress:
        enabled: true
        annotations:
          kubernetes.io/ingress.class: nginx
          cert-manager.io/cluster-issuer: 'letsencrypt-staging'
          nginx.ingress.kubernetes.io/auth-url: 'https://raspbernetes.com/oauth2/auth'
          nginx.ingress.kubernetes.io/auth-signin: 'https://raspbernetes.com/oauth2/start?rd=$escaped_request_uri'
        hosts:
          - prometheus.raspbernetes.com
        path: /
        tls:
          - secretName: prometheus.raspbernetes.com-tls
            hosts:
              - prometheus.raspbernetes.com
      prometheusSpec:
        # storageSpec:
        #   volumeClaimTemplate:
        #     spec:
        #       storageClassName: openebs-cstor-sparse
        #       resources:
        #         requests:
        #           storage: 5Gi
        ruleSelector: {}
        ruleNamespaceSelector: {}
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelector: {}
        serviceMonitorNamespaceSelector: {}
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelector: {}
        podMonitorNamespaceSelector: {}
        podMonitorSelectorNilUsesHelmValues: false
    kube-state-metrics:
      image:
        repository: raspbernetes/kube-state-metrics
        tag: v1.9.5
